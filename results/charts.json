[{
    "title": "Python: Loop vs Numpy (CPU)",
    "remarks": ["Comparison between simple Python loop and Numpy"],
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         }         
        ],
    "columns": ["Python loop [cpu]", "Py Numpy [cpu]"],
    "output": "python-loop-vs-numpy-linux-cpu.png",
    "legend": "lower right"
 },
 {
    "title": "Python: Loop vs Numpy 2 (CPU)",
    "remarks": ["Same as above, on both Linux and Windows"],
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         },
         { "data": "benny-windows.csv",
           "title": "Windows"
         }
        ],
    "columns": ["Python loop [cpu]", "Py Numpy [cpu]"],
    "output": "python-loop-vs-numpy-cpu.png",
    "legend": "lower right"
 },
 {
    "title": "R: Loop vs Vectorized (CPU)",
    "title-id": "Loop vs Tervektorisasi di Bahasa R (CPU)",
    "remarks": ["Implementation with various methods in R"],
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         },
         { "data": "benny-windows.csv",
           "title": "Windows"
         }         
        ],
    "columns": ["R (loop) [cpu]", "R (array) [cpu]", "R (matrix) [cpu]", 
    			"R (data.frame) [cpu]", "R (data.table) [cpu]"],
    "output": "r-loop-vs-vec.png",
    "legend": "right"
 },
 {
    "title": "Python: Loop vs Numpy vs Pandas (CPU)",
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         },
         { "data": "benny-windows.csv",
           "title": "Windows"
         }
        ],
    "columns": ["Python loop [cpu]", "Py Numpy [cpu]", "Py Pandas [cpu]"],
    "output": "python-loop-vs-numpy-vs-pandas-cpu.png",
    "legend": "lower right"
 },
 {
 	"title": "Julia: Loop vs Vector (CPU)",
    "title-id": "Julia Loop vs Vektor (CPU)",
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         },
         { "data": "benny-windows.csv",
           "title": "Windows"
         }
        ],
    "columns": ["Julia (loop) [cpu]", "Julia (vec) [cpu]", "C++ loop [cpu]"],
    "output": "julia-loop-vs-vector.png",
    "legend": "lower right"
 },
  {
    "title": "Numpy vs Octave vs R vs Java vs Julia vs C++ (CPU)",
    "remarks": ["Comparison among different programming languages"],
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         },
         { "data": "benny-windows.csv",
           "title": "Windows"
         }
        ],
    "columns": ["Py Numpy [cpu]", "Octave [cpu]", "R (array) [cpu]", "C++ loop [cpu]", "Java loop [cpu]", "Julia (vec) [cpu]", "Julia (loop) [cpu]"],
    "output": "script-vs-script-vs-java-vs-c++-cpu.png"
 },
 {
    "title": "Python Vectorization: Numpy vs Deep Learning Frameworks (CPU)",
    "title-id": "Vektorisasi Python Numpy vs Framework (CPU)",
    "remarks": ["SAXPY array operation in Numpy vs machine learning frameworks such as Tensorflow, MXNet, and CNTK. Only tested on Linux.",
    		    "Note: CNTK result is way off, not sure why. Please have a look at the source code."],
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         }
        ],
    "columns": ["Py Numpy [cpu]", "Py TensorFlow [cpu]", "Py MXNet [cpu]", "Py CNTK [cpu]"],
    "output": "vectorized-numpy-vs-frameworks-cpu.png"
 },
 {
    "title": "Numpy vs Deep Learning Frameworks (GPU and CPU)",
    "title-id": "Numpy vs Framework (GPU dan CPU)",
    "remarks": ["Same as above, but on GPU as well"],
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         }
        ],
    "columns": ["Py Numpy [cpu]", "Py TensorFlow [cpu]", "Py MXNet [cpu]", "Py TensorFlow [gpu]", "Py MXNet [gpu]", "Py CNTK [gpu]", "Py CNTK [cpu]"],
    "output": "vectorized-numpy-vs-frameworks-gpu.png"
 },
 {
    "title": "Deep Learning Frameworks GPU vs Loop CPU",
    "remarks": ["Comparing frameworks running on GPU with naive C++ loop running on CPU."],
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         }
        ],
    "columns": ["Py TensorFlow [gpu]", "Py MXNet [gpu]", "Py CNTK [gpu]", "C++ loop [cpu]"],
    "output": "frameworks-gpu-vs-c++-cpu.png"
 },
 {
    "title": "C++ Parallel APIs (CPU)",
    "title-id": "API Paralel C++ (CPU)",
    "remarks": ["Comparing naive C++ loop with OpenCL and OpenMP on CPU."],
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         },
         { "data": "benny-windows.csv",
           "title": "Windows"
         }         
        ],
    "columns": ["C++ loop [cpu]", "C++ OCL [cpu]", "C++ OMP [cpu]"],
    "output": "parallel-c++-cpu.png"
 },
 {
    "title": "C++ CPU vs GPU",
    "remarks": ["Comparing naive C++ loop with CUDA, OpenCL, Thrust, and Cublas on GPU"],
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         },
         { "data": "benny-windows.csv",
           "title": "Windows"
         }         
        ],
    "columns": ["C++ loop [cpu]", "C++ CUDA [gpu]", "C++ OCL [gpu]", "C++ Thrust [gpu]", "C++ Cublas [gpu]"],
    "output": "c++-cpu-vs-gpu.png"
 },
 {
    "title": "OpenCL vs PyOpenCL (CPU & GPU)",
    "remarks": ["Comparing C++ OpenCL with OpenCL Python wrapper."],
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         },
         { "data": "benny-windows.csv",
           "title": "Windows"
         }         
        ],
    "columns": ["PyOCL [cpu]", "PyOCL [gpu]", "C++ OCL [cpu]", "C++ OCL [gpu]"],
    "output": "pyopencl-vs-opencl.png"
 },
 {
    "title": "PyCUDA vs C++ (GPU)",
    "remarks": ["Comparing PyCUDA (Python CUDA wrapper) with native C++ CUDA GPU"],
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         },
         { "data": "benny-windows.csv",
           "title": "Windows"
         }         
        ],
    "columns": ["PyCUDA [gpu]", "C++ CUDA [gpu]"],
    "output": "pycuda-vs-c++.png",
    "legend": "lower right"
 },
 {
    "title": "Tensorflow: Python vs C++ (GPU)",
    "remarks": ["Comparing Tensorflow C++ and Python performance"],
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         }
        ],
    "columns": ["Py TensorFlow [gpu]", "C++ TensorFlow [gpu]"],
    "output": "tensorflow-python-vs-c++.png"
 },
 {
    "title": "GPU Conclusion",
    "remarks": ["Benchmarking various GPU APIs (only on Linux since it has the most APIs)"],
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         }
        ],
    "exclude": ["*cpu*"],
    "output": "conclusion-gpus.png"
 },
 {
    "title": "Linux Conclusion",
    "title-id": "Perbandingan Performansi Berbagai Pemrograman \ndi CPU i7-6700 3.4GHz dan GPU GTX 1080",
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         }         
        ],
    "exclude": ["Python loop [cpu]", "R (loop) [cpu]"],
    "output": "conclusion-linux.png"
 },
 {
    "title": "Windows Conclusion",
    "series": 
        [
         { "data": "benny-windows.csv",
           "title": "Windows",
           "color": "#ff8000"
         }         
        ],
    "exclude": ["Python loop [cpu]", "R (loop) [cpu]", "C++ TensorFlow [gpu]", "Py CNTK [gpu]", "Py CNTK [cpu]"],
    "output": "conclusion-windows.png"
 },
 {
    "title": "Conclusion",
    "title-id": "Perbandingan Performansi Berbagai Pemrograman \ndi CPU i7-6700 3.4GHz dan GPU GTX 1080",
    "series": 
        [{ "data": "benny-linux.csv",
           "title": "Linux"
         },
         { "data": "benny-windows.csv",
           "title": "Windows"
         }         
        ],
    "exclude": ["Python loop [cpu]", "R (loop) [cpu]", "C++ TensorFlow [gpu]", "Py CNTK [gpu]", "Py CNTK [cpu]"],
    "output": "conclusion.png"
 }
]

